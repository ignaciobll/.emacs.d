* Basic Config
:PROPERTIES:
:tangle:   ~/.emacs.d/config2/package-management-settings.el
:END:
** Melpa

Milkypostman’s Emacs Lisp Package Archive - https://melpa.org/#/
This is from where you will download most emacs packages. Just checks
if your emacs version is new enough to use melpa and install/initialize in that case.

#+BEGIN_SRC elisp

  (when (>= emacs-major-version 24)
    (require 'package)
    (add-to-list
     'package-archives
     '("melpa" . "http://melpa.org/packages/")
     t)
    (package-initialize))

#+END_SRC

<2016-04-12 mar 01:00> First change to my new emacs settings.

** Use-package
We will use ~use-package~ to manage our emacs-packages
configuration. 

https://github.com/jwiegley/use-package

#+BEGIN_SRC elisp

  (when (not (use-package))
    (package-install use-package)))

#+END_SRC

<2016-04-12 mar 10:31> Use package auto-install.



* Interface
:PROPERTIES:
:tangle:   ~/.emacs.d/config2/interface-settings.el
:END:

** Session 

I like to open Emacs and have all like when I closed it. With this
commnad, all opened buffers, window distribution and all session settings will
remain after closing Emacs.

#+BEGIN_SRC elisp

  (desktop-save-mode 1)

#+END_SRC

<2016-04-12 mar 10:54> Desktop save mode.

** Emacs bars

For a cleaner view of Emacs, I will disable the menu bar and tool bar
on the top. Also, I will not use the scrollbar on the right of a
buffer.

UPDATE: I will try emacs with menu-bar turned on.

#+BEGIN_SRC elisp

(when window-system
  (tooltip-mode -1)
  (tool-bar-mode -1)
  (menu-bar-mode 1)
  (scroll-bar-mode -1))

#+END_SRC

<2016-04-12 mar 10:50>

** Theme

I use this page to choose my emacs theme.

https://emacsthemes.com/

#+BEGIN_SRC elisp

  (load-theme 'gruvbox t)

#+END_SRC
<2016-04-12 mar 11:11>

** Helm 
#+BEGIN_SRC elisp

  (use-package helm
    :ensure helm-config helm
#+END_SRC


* Navigation
:PROPERTIES:
:tangle:   ~/.emacs.d/config2/navigation-settings.el
:END:

** Avy

[[https://github.com/abo-abo/avy][Avy]] - Jump to visible text using a char-based decision tree.

#+BEGIN_SRC elisp

  (use-package avy
    :ensure t
    :bind (("C-:" . avy-goto-char)
           ("C-'" . avy-goto-char2)
           ("M-g g" . avy-goto-line)
           ("M-g w" . avy-goto-word-1))

#+END_SRC


* Visual
:PROPERTIES:
:tangle:   ~/.emacs.d/config2/theme-settings.el
:END:

** Rainbow Delimiters

https://github.com/Fanael/rainbow-delimiters

#+BEGIN_SRC elisp
  (use-package rainbow-delimiters
    :ensure t
    :init
    (add-hook 'prog-mode-hook #'rainbow-delimiters-mode)
    )
#+END_SRC
<2016-04-12 mar 11:13>

** Rainbow Mode

[[https://julien.danjou.info/projects/emacs-packages][Rainbow-mode]] - Display color on color-code string (hex/rgb) directly.

#+BEGIN_SRC elisp

  (use-package rainbow-mode
    :ensure t
    :mode "\\.css\\'"
    )

#+END_SRC

<2016-04-13 mié 00:42>
